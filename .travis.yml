language: c

os: linux
dist: trusty
# Short duration job, use the container/without sudo image as it boots faster
sudo: false
# Use the latest Travis images since they are more up to date than the stable release.
group: edge

before_cache:
  - rm -f $HOME/.cache/pip/log/debug.log # erase log

cache:
  directories:
    - $HOME/.cache/pip # pip cache

before_install:
 - if [ "$TASK" == "spellintian" -o "$TASK" == "spellintian-duplicates" ]; then sudo add-apt-repository ppa:waja/trusty-backports -y; sudo apt-get update -qq; sudo apt-get install lintian -y; fi # Install a late enough lintian
 - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then if [ ! -d /usr/local/sbin ]; then sudo mkdir -p /usr/local/sbin && sudo chown -R $(whoami) /usr/local/sbin; fi; fi

install:
 - if [ "$TASK" = "codespell" ]; then pip install --user --upgrade git+https://github.com/codespell-project/codespell.git; fi

script:
  - bash -ex .travis-ci.sh

after_failure:
  - tree
# Disabled as otherwise the logfile is too big
#  - if [ -f ${TRAVIS_BUILD_DIR}/config.log ]; then cat ${TRAVIS_BUILD_DIR}/config.log; fi
  - if [ -f ${TRAVIS_BUILD_DIR}/test-suite.log ]; then cat ${TRAVIS_BUILD_DIR}/test-suite.log; fi
  - if [ -f ${TRAVIS_BUILD_DIR}/tests/test-suite.log ]; then cat ${TRAVIS_BUILD_DIR}/tests/test-suite.log; fi
  - if [ -f ${TRAVIS_BUILD_DIR}/_build/tests/test-suite.log ]; then cat ${TRAVIS_BUILD_DIR}/_build/tests/test-suite.log; fi
  - if [ -f ${TRAVIS_BUILD_DIR}/_build/config.log ]; then cat ${TRAVIS_BUILD_DIR}/_build/config.log; fi
  - if [ -f ${TRAVIS_BUILD_DIR}/_build/sub/config.log ]; then cat ${TRAVIS_BUILD_DIR}/_build/sub/config.log; fi
  - if [ -f ${TRAVIS_BUILD_DIR}/_build/test-suite.log ]; then cat ${TRAVIS_BUILD_DIR}/_build/test-suite.log; fi
  - if [ -f ${TRAVIS_BUILD_DIR}/_build/sub/test-suite.log ]; then cat ${TRAVIS_BUILD_DIR}/_build/sub/test-suite.log; fi

addons:
  apt:
    packages: &core_build
     # This is all the bits we need to enable all options on Linux
     - asciidoc
     - xmlto
     - tree
    packages: &core_build_gcc_latest
     - *core_build
     - gcc-9
    packages: &core_build_clang_latest
     - *core_build
     - clang-6.0
  homebrew:
    packages:
     # This is all the bits we need to enable all options on Mac
     - asciidoc
     - xmlto
    update: true

matrix:
  fast_finish: true
  include:
    - os: linux
      dist: xenial
      env: TASK='codespell'
      addons:
        apt:
          packages:
           - moreutils
    - os: osx
      osx_image: xcode11
      compiler: clang
      env:
      - TASK='compile'
    - os: osx
      osx_image: xcode11
      compiler: gcc
      env:
      - TASK='compile'
    - os: linux
      dist: xenial
      compiler: clang
      env: TASK='compile'
      addons:
        apt:
          packages:
           - *core_build_clang_latest
          sources:
           - ubuntu-toolchain-r-test
           - llvm-toolchain-xenial-6.0
    - os: linux
      dist: xenial
      compiler: gcc
      env: TASK='compile'
      addons:
        apt:
          packages:
           - *core_build_gcc_latest
          sources:
           - ubuntu-toolchain-r-test
    - os: linux
      dist: xenial
      compiler: gcc
      env: TASK='coverage'
      addons:
        apt:
          packages:
           - *core_build_gcc_latest
          sources:
           - ubuntu-toolchain-r-test
    - os: linux
      dist: xenial
      compiler: gcc
      env: TASK='coverity'
      addons:
        apt:
          packages:
           # Coverity doesn't work with g++-5 or g++-6 yet
           - g++-4.9
          sources:
           - ubuntu-toolchain-r-test
    - os: linux
      dist: xenial
      env: TASK='spellintian'
      addons:
        apt:
          packages:
           - moreutils
    - os: linux
      dist: xenial
      env: TASK='spellintian-duplicates'
      addons:
        apt:
          packages:
           - moreutils
  allow_failures:
    - os: linux
      dist: xenial
      compiler: gcc
      env: TASK='coverage'
    - os: linux
      dist: xenial
      compiler: gcc
      env: TASK='coverity'
    - os: linux
      dist: xenial
      env: TASK='spellintian'
    - os: linux
      dist: xenial
      env: TASK='spellintian-duplicates'
